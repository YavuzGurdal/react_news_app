{"version":3,"sources":["components/NewsCard/NewsCard.js","components/HomePage/HomePage.js","data.js","components/NavBar/NavBar.js","components/DetailPage/DetailPage.js","App.js","serviceWorker.js","index.js"],"names":["NewsCard","props","style","width","newWidth","height","newHeight","className","Card","Img","variant","src","urlToImage","Title","padding","title","Text","newTextHeight","description","Button","display","onClick","click","HomePage","state","data","activeNewIndex","newsDetail","url","this","country","category","axios","get","then","result","console","log","setState","articles","catch","err","news","map","item","i","key","index","marginTop","float","CardGroup","position","top","right","window","location","href","Component","categoryData","categoriesData","name","categoriesCountry","parameter","NavBar","useState","text","setText","setCategory","setCountry","fontFamily","Navbar","fixed","expand","bg","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","Item","toLowerCase","Form","inline","onSubmit","event","preventDefault","click3","FormControl","type","value","onChange","e","target","placeholder","autoComplete","DetailPage","App","stateCategory","updateStateCategory","stateCountry","updateStateCountry","stateSearch","updateStateSearch","search","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c54effd9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\n// import { Link } from 'react-router-dom'\r\n\r\nfunction NewsCard(props) {\r\n\r\n    // var clickHandler = (parametre) => {\r\n    //     console.log(parametre)\r\n    // }\r\n\r\n    return (\r\n\r\n        <div style={{ width: props.newWidth, height: props.newHeight /*width'i propsdan aldim. 100% yapabilmek icin*/ }}> \r\n            <div className=\"m-2 shadow cardbox\" >\r\n                <Card >\r\n                    <Card.Img variant=\"top\" src={props.urlToImage} style={{ height: '200px' }} />\r\n\r\n                    <Card.Title className=\"cardTitle mb-1\" style={{ height: '130px', padding: '8px' }}>{props.title}</Card.Title>\r\n                    <Card.Text className=\"cardText mb-1\" style={{ height: props.newTextHeight, padding: '8px' }}>\r\n                        {props.description}\r\n                    </Card.Text>\r\n\r\n                    <Button className='m-2' style={{display: props.display}} variant=\"outline-primary\"\r\n                        onClick= {props.click}\r\n                        //value={props.publishedAt}\r\n                        // onClick={onClickHandler}\r\n                        //onClick={ () => clickHandler({props.publishedAt}) }\r\n                    >\r\n                        Read More\r\n                    </Button>\r\n\r\n                    {/* <Link to=\"/news-detail\">\r\n                        <Button variant=\"primary\">Read More</Button>\r\n                    </Link> */}\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsCard","import React, { Component } from 'react';\r\nimport { CardGroup } from 'react-bootstrap';\r\nimport NewsCard from '../NewsCard/NewsCard';\r\nimport axios from 'axios';\r\n// sabit div kısmını linkle baska sayfada acmayı dene\r\n\r\nclass HomePage extends Component {\r\n    // {Your API key is: \"4120e32fdd1049bb95ff351e584be75d\"}\r\n    state = { // moc data koymamiz lazim, yoksa app problem oluyor. problemi onlemek icin if kosulu yazilabilir.\r\n        data: [\r\n            {\r\n                urlToImage: null, // \"https://www.nj.com/resizer/ewOeGU5IVwJgJ0_NXptqTfUN1M8=/1280x0/smart/arc-anglerfish-arc2-prod-advancelocal.s3.amazonaws.com/public/OEFHMGVTFNCNVBXNJQADDHCSRM.jpg\",\r\n                title: null,//\"Test 2\",\r\n                description: null//\"Test 2 content\"\r\n            }\r\n        ],\r\n        activeNewIndex: 0, // bunu componentDidUpdate'te kullandik\r\n        newsDetail: null\r\n    }\r\n\r\n    componentDidMount() { // internetten data alirken bunu kullaniyoruz.Bu kisim render dan sonra calisiyor ve\r\n        // render'i tekrar calistiriyor.\r\n\r\n        const urlBase = 'https://newsapi.org/v2/top-headlines?'\r\n        const urlCountry = this.props.country !== null ? `country=${this.props.country}&` : 'country=us&'\r\n        const category = this.props.category !== null ? `category=${this.props.category}&` : 'category=general&'\r\n        const urlApi = 'apiKey=4120e32fdd1049bb95ff351e584be75d'\r\n\r\n        const url = urlBase + urlCountry + category + urlApi;\r\n\r\n\r\n        /*\r\n        const urlBase = 'https://newsapi.org/v2/everything?'\r\n        const urlSearch = this.props.search !== null ? `q=${this.props.search}&` : 'q=corona&'\r\n        //const urlLanguage = this.props.country !== null ? `language=${this.props.country}&` : 'language=en&'\r\n        const urlLanguage = this.props.country === 'us' ? 'language=en&' :  // abd ulke kodu ve dil kodu farkli oldugu icin bunu yazdim\r\n        this.props.country !== null ? `language=${this.props.country}&`: ''\r\n       \r\n        const urlApi = 'apiKey=4120e32fdd1049bb95ff351e584be75d'\r\n\r\n        const url = urlBase + urlSearch + urlLanguage + urlApi;\r\n        */\r\n\r\n        // yukaridaki sekilde calisiyor.\r\n        // Sorunlar\r\n        // 1-abd ulke kodu us, dil kodu en (cozuldu)\r\n        // 2-kelimeleri yanlış yazınca aramalarda problem cikabiliyor.  \r\n        // 3-search kısmında tusa yada enter'a basınca yani ordan bişey gelince everything olan url calissin istiyorum ama kosulu yazamadim\r\n\r\n        axios.get(url)\r\n            .then(result => {\r\n                console.log(result)\r\n                this.setState({ data: result.data.articles })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        console.log('componentDidUpdate calisti')\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        console.log('render calisti')\r\n\r\n        const updateActiveNewIndex = (index) => { // bu bir function. const koymamin sebebi render icinde yazmis olmam\r\n            this.setState({\r\n                activeNewIndex: index\r\n            })\r\n        }\r\n\r\n        const news = this.state.data.map((item, i) => {\r\n            return ( // bu return'u map()'den dolayi yazdim\r\n                <NewsCard\r\n                    key={i}\r\n                    {...item}\r\n\r\n                    //******** propsla class veya style gonderebiliriz. asagidaki gibi ********/\r\n                    newWidth=\"25%\" // bunun ismini propsdaki ile ayni yazdim.\r\n                    newHeight='570px'\r\n                    newTextHeight='150px'\r\n                    // display= 'block'\r\n\r\n                    click={() => updateActiveNewIndex(i)}\r\n                />\r\n            );\r\n        });\r\n        //console.log(this.state.activeNewIndex);\r\n\r\n        const i = this.state.activeNewIndex; // bunu asagidaki NewsCard'in icindekileri kisa olarak i yazmak icin yazdik\r\n\r\n        const visitUrlHandler = () => { // const koymamin sebebi render icinde yazmis olmam\r\n            console.log(this.state.data[i].url)\r\n            window.location.href = this.state.data[i].url; // haberin detay sayfasına gitmek icin\r\n        }\r\n\r\n        return (\r\n\r\n            <div style={{ marginTop: \"65px\" }} >\r\n                <div style={{ width: '70%', float: \"left\" }} >\r\n                    <CardGroup >\r\n                        {news}\r\n\r\n                        {/*<NewsCard />*/}\r\n                    </CardGroup>\r\n                </div>\r\n\r\n                <div style={{ width: '30%', float: \"left\", position: 'fixed', top: '65px', right: 0 }} >\r\n                    <div>\r\n                    \r\n                        <NewsCard\r\n                            click={visitUrlHandler} // haberin linkini almak icin\r\n                            //******** propsla class veya style gonderebiliriz. asagidaki gibi ********/\r\n                            newWidth=\"100%\" // bunu propsla gondermemin sebebi ekranda sagdaki tek cardın width'ini 100% yapmak icin\r\n                            newHeight='570px'\r\n                            newTextHeight='204px'\r\n                            //display='none' // olusacak card'ların display durumlarını propsla gonderiyorum. \r\n                            // bunu sagdaki buyuk divin icindeki buttonu yok etmek icin kullandim\r\n                            urlToImage={this.state.data[i].urlToImage}\r\n                            title={this.state.data[i].title}\r\n                            description={this.state.data[i].description}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","\r\nexport const categoryData = {\r\n\r\n    categoriesData: [\r\n        {\r\n            name: 'Business'\r\n        },\r\n        {\r\n            name: 'Entertainment'\r\n        },\r\n        {\r\n            name: 'General'\r\n        },\r\n        {\r\n            name: 'Health'\r\n        },\r\n        {\r\n            name: 'Science'\r\n        },\r\n        {\r\n            name: 'Sports'\r\n        },\r\n        {\r\n            name: 'Technology'\r\n        }\r\n    ],\r\n\r\n    categoriesCountry: [\r\n        {\r\n            name: 'USA',\r\n            parameter: 'us'\r\n        },\r\n        {\r\n            name: 'GERMANY',\r\n            parameter: 'de'\r\n        },\r\n        {\r\n            name: 'TURKEY',\r\n            parameter: 'tr'\r\n        }\r\n    ]\r\n}\r\n\r\n\r\n// export const categoryData = {\r\n\r\n//     categoriesData: [\r\n//         {\r\n//             name: 'Business',\r\n//             parameter: 'business'\r\n//         },\r\n//         {\r\n//             name: 'Entertainment',\r\n//             parameter: 'entertainment'\r\n//         },\r\n//         {\r\n//             name: 'General',\r\n//             parameter: 'general'\r\n//         },\r\n//         {\r\n//             name: 'Health',\r\n//             parameter: 'health'\r\n//         },\r\n//         {\r\n//             name: 'Science',\r\n//             parameter: 'science'\r\n//         },\r\n//         {\r\n//             name: 'Sports',\r\n//             parameter: 'sports'\r\n//         },\r\n//         {\r\n//             name: 'Technology',\r\n//             parameter: 'technology'\r\n//         }\r\n//     ]\r\n// }","import React, { useState } from 'react';\r\nimport { Navbar, Nav, Form, FormControl, Button, NavDropdown } from 'react-bootstrap'\r\n// import { TiNews } from \"react-icons/ti\";\r\nimport { GiNewspaper } from \"react-icons/gi\";\r\nimport { categoryData } from '../../data';\r\n\r\n\r\nfunction NavBar(props) {\r\n\r\n    const [text, setText] = useState(null)\r\n\r\n    const [category, setCategory] = useState(null)\r\n    const [country, setCountry] = useState(null)\r\n\r\n    const sendFunction = () => {\r\n\r\n        props.click(\r\n            category,\r\n            country\r\n        )\r\n    }\r\n\r\n    sendFunction()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // submit\r\n        props.click3(\r\n            text\r\n        )\r\n        //console.log(text)\r\n        setText('')   \r\n    }\r\n\r\n\r\n    return (\r\n        // fixed=\"top\" ; navbarın yukarıda sabit kalmasını saglıyor\r\n        // expand=\"lg\"\r\n        <div style={{ fontFamily: 'Special Elite, cursive' }}>\r\n            <Navbar fixed=\"top\" expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"/\">YVZ NEWS <GiNewspaper className='iconn' /></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/\">Home</Nav.Link>\r\n                        {/*<Nav.Link href=\"/news-detail\">Detail Page</Nav.Link>*/}\r\n                        <NavDropdown title=\"Categories\" id=\"basic-nav-dropdown\">\r\n                            {\r\n                                categoryData.categoriesData.map((item, i) =>\r\n                                    //<NavDropdown.Item key={i} onClick={() => props.click(`${item.name.toLowerCase()}`)}>{item.name}</NavDropdown.Item>\r\n                                    <NavDropdown.Item key={i} onClick={() => setCategory(`${item.name.toLowerCase()}`)}>{item.name}</NavDropdown.Item>\r\n                                )\r\n                            }\r\n                        </NavDropdown>\r\n                        <NavDropdown title=\"Country\" id=\"basic-nav-dropdown\">\r\n                            {\r\n                                categoryData.categoriesCountry.map((item, i) =>\r\n                                    //<NavDropdown.Item key={i} onClick={() => props.click2(`${item.parameter}`)}>{item.name}</NavDropdown.Item>\r\n                                    <NavDropdown.Item key={i} onClick={() => setCountry(`${item.parameter}`)}>{item.name}</NavDropdown.Item>\r\n                                )\r\n                            }\r\n                        </NavDropdown>\r\n                    </Nav>\r\n\r\n                    <Form inline onSubmit={handleSubmit}>\r\n                        <FormControl type=\"text\" value={text}  onChange={e => setText(e.target.value)} placeholder=\"Search\" className=\"mr-sm-2\" autoComplete='off'/>\r\n                        <Button type=\"submit\" variant=\"outline-success\">Search</Button>\r\n                    </Form>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\n\r\nfunction DetailPage() {\r\n    return (\r\n        <div>\r\n            hello from DEtailPagee\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailPage\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport HomePage from './components/HomePage/HomePage';\nimport NavBar from './components/NavBar/NavBar';\nimport DetailPage from './components/DetailPage/DetailPage';\n\n// Problem-1 --> haber linkine gidip geri gelince, site tekrar default degerlere gidiyor\n\nfunction App() {\n\n  // bunlarin hepsini App.js 'i render yapmak icin yaptik\n\n  const [stateCategory, updateStateCategory] = useState(null) // gelen category'leri alt componente atabilmek icin state yaptik \n \n  const [stateCountry, updateStateCountry] = useState(null) \n\n  const [stateSearch, updateStateSearch] = useState(null) \n\n\n  const categoriesHandler = (category, country) => {\n    //console.log(category)\n    updateStateCategory(category)\n    updateStateCountry(country)\n  }\n\n  // const countriesHandler = (country) => {\n  //   updateStateCountry(country)\n  // }\n\n  const searchHandler = (search) => {\n    //console.log(search)\n    updateStateSearch(search)\n  }\n\n  //click2= {countriesHandler}\n  return (\n    <div>\n\n      <NavBar click= {categoriesHandler} click3={searchHandler}/>\n\n      <Switch>\n        <Route exact path=\"/\" component={ () => <HomePage category={stateCategory} country={stateCountry} search={stateSearch}/> } /> {/* route'lu componente bu sekilde props gonderiyoruz */}\n        <Route path=\"/news-detail\" component={DetailPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}