{"version":3,"sources":["components/NewsCard/NewsCard.js","components/HomePage/HomePage.js","data.js","components/NavBar/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["NewsCard","props","style","width","newWidth","height","newHeight","className","Card","Img","variant","src","urlToImage","Title","padding","title","Text","newTextHeight","description","Button","display","onClick","click","HomePage","state","data","activeNewIndex","newsDetail","stateCountry","stateCategory","stateSearch","console","log","this","country","axios","get","urlBase","then","result","setState","articles","catch","err","search","url","category","news","map","item","i","key","index","marginTop","float","CardGroup","position","top","right","window","open","Component","categoryData","categoriesData","name","categoriesCountry","parameter","NavBar","useState","text","setText","fontFamily","Navbar","fixed","expand","bg","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","Item","toLowerCase","Form","inline","onSubmit","event","preventDefault","click2","FormControl","type","value","onChange","e","target","placeholder","autoComplete","App","setStateSearch","categoryAndCountry","setCategoryAndCountry","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c9aca894.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\n// import { Link } from 'react-router-dom'\r\n\r\nfunction NewsCard(props) {\r\n\r\n    // var clickHandler = (parametre) => {\r\n    //     console.log(parametre)\r\n    // }\r\n\r\n    return (\r\n\r\n        <div style={{ width: props.newWidth, height: props.newHeight /*width'i propsdan aldim. 100% yapabilmek icin*/ }}> \r\n            <div className=\"m-2 shadow cardbox\" >\r\n                <Card >\r\n                    <Card.Img variant=\"top\" src={props.urlToImage} style={{ height: '200px' }} />\r\n\r\n                    <Card.Title className=\"cardTitle mb-1\" style={{ height: '130px', padding: '8px' }}>{props.title}</Card.Title>\r\n                    <Card.Text className=\"cardText mb-1\" style={{ height: props.newTextHeight, padding: '8px' }}>\r\n                        {props.description}\r\n                    </Card.Text>\r\n\r\n                    <Button className='m-2' style={{display: props.display}} variant=\"outline-primary\"\r\n                        onClick= {props.click}\r\n                        //value={props.publishedAt}\r\n                        // onClick={onClickHandler}\r\n                        //onClick={ () => clickHandler({props.publishedAt}) }\r\n                    >\r\n                        Read More\r\n                    </Button>\r\n\r\n                    {/* <Link to=\"/news-detail\">\r\n                        <Button variant=\"primary\">Read More</Button>\r\n                    </Link> */}\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsCard","import React, { Component } from 'react';\r\nimport { CardGroup } from 'react-bootstrap';\r\nimport NewsCard from '../NewsCard/NewsCard';\r\nimport axios from 'axios';\r\n// sabit div kısmını linkle baska sayfada acmayı dene\r\n\r\nclass HomePage extends Component {\r\n    // {Your API key is: \"4120e32fdd1049bb95ff351e584be75d\"}\r\n    state = { // moc data koymamiz lazim, yoksa app problem oluyor. problemi onlemek icin if kosulu yazilabilir.\r\n        data: [\r\n            {\r\n                urlToImage: null, // \"https://www.nj.com/resizer/ewOeGU5IVwJgJ0_NXptqTfUN1M8=/1280x0/smart/arc-anglerfish-arc2-prod-advancelocal.s3.amazonaws.com/public/OEFHMGVTFNCNVBXNJQADDHCSRM.jpg\",\r\n                title: null,//\"Test 2\",\r\n                description: null//\"Test 2 content\"\r\n            }\r\n        ],\r\n        activeNewIndex: 0, // bunu componentDidUpdate'te kullandik\r\n        newsDetail: null,\r\n\r\n        stateCountry: '',\r\n\r\n        stateCategory: '',\r\n\r\n        stateSearch: ''\r\n    }\r\n\r\n    componentDidMount() { // internetten data alirken bunu kullaniyoruz.Bu kisim render dan sonra calisiyor ve\r\n        // render'i tekrar calistiriyor.\r\n        console.log(this.props.country)\r\n\r\n        const urlBase = 'https://newsapi.org/v2/top-headlines?'\r\n\r\n        //const urlCountry = this.props.country !== '' ? `country=${this.props.country}&` : 'country=us&'\r\n        const urlCountry = 'country=us&'\r\n\r\n        //const category = this.props.category !== '' ? `category=${this.props.category}&` : 'category=general&'\r\n        const category = 'category=general&'\r\n\r\n        const urlApi = 'apiKey=4120e32fdd1049bb95ff351e584be75d'\r\n\r\n        const url = urlBase + urlCountry + category + urlApi;\r\n\r\n        axios.get(url)\r\n            .then(result => {\r\n                console.log(result)\r\n                this.setState({\r\n                    data: result.data.articles,\r\n                    // stateCountry: this.props.country,\r\n                    // stateCategory: this.props.category\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        //console.log('componentDidUpdate calisti')\r\n\r\n        //console.log(this.props.country)\r\n\r\n        if( this.props.search !== '' && this.props.search !== this.state.stateSearch ) {\r\n            \r\n            const urlBase = 'https://newsapi.org/v2/everything?'\r\n            const urlSearch = `q=${this.props.search}&`\r\n\r\n            const urlLanguage = this.props.country === 'us' ? 'language=en&' :  // abd ulke kodu ve dil kodu farkli oldugu icin bunu yazdim\r\n            this.props.country !== '' ? `language=${this.props.country}&`: ''\r\n           \r\n            const urlApi = 'apiKey=4120e32fdd1049bb95ff351e584be75d'\r\n    \r\n            const url = urlBase + urlSearch + urlLanguage + urlApi;\r\n            \r\n            // problem --> kelimeleri yanlış yazınca aramalarda problem cikabiliyor.  \r\n\r\n            axios.get(url)\r\n                .then(result => {\r\n                    console.log(result)\r\n                    this.setState({\r\n                        data: result.data.articles,\r\n                        stateCountry: this.props.country,\r\n                        stateCategory: this.props.category,\r\n                        stateSearch: this.props.search\r\n                    })\r\n                })\r\n                .catch(err => console.log(err));\r\n\r\n        } else if ( ( (this.props.country !== '') || (this.props.category !== '') ) && (this.props.country !== this.state.stateCountry || this.props.category !== this.state.stateCategory) ) {\r\n\r\n            const urlBase = 'https://newsapi.org/v2/top-headlines?'\r\n            const urlCountry = this.props.country !== '' ? `country=${this.props.country}&` : 'country=us&'\r\n            const category = this.props.category !== '' ? `category=${this.props.category}&` : 'category=general&'\r\n            const urlApi = 'apiKey=4120e32fdd1049bb95ff351e584be75d'\r\n\r\n            const url = urlBase + urlCountry + category + urlApi;\r\n\r\n            axios.get(url)\r\n                .then(result => {\r\n                    console.log(result)\r\n                    this.setState({\r\n                        data: result.data.articles,\r\n                        stateCountry: this.props.country,\r\n                        stateCategory: this.props.category,\r\n                        stateSearch: this.props.search\r\n                    })\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log('render calisti')\r\n\r\n        const updateActiveNewIndex = (index) => { // bu bir function. const koymamin sebebi render icinde yazmis olmam\r\n            this.setState({\r\n                activeNewIndex: index\r\n            })\r\n        }\r\n\r\n        const news = this.state.data.map((item, i) => {\r\n            return ( // bu return'u map()'den dolayi yazdim\r\n                <NewsCard\r\n                    key={i}\r\n                    {...item}\r\n\r\n                    //******** propsla class veya style gonderebiliriz. asagidaki gibi ********/\r\n                    newWidth=\"25%\" // bunun ismini propsdaki ile ayni yazdim.\r\n                    newHeight='570px'\r\n                    newTextHeight='150px'\r\n                    // display= 'block'\r\n\r\n                    click={() => updateActiveNewIndex(i)}\r\n                />\r\n            );\r\n        });\r\n        //console.log(this.state.activeNewIndex);\r\n\r\n        const i = this.state.activeNewIndex; // bunu asagidaki NewsCard'in icindekileri kisa olarak i yazmak icin yazdik\r\n\r\n        const visitUrlHandler = () => { // const koymamin sebebi render icinde yazmis olmam\r\n            console.log(this.state.data[i].url)\r\n            //window.location.href = this.state.data[i].url; // haberin detay sayfasına gitmek icin ve ayni sayfada acmak icin\r\n            window.open(this.state.data[i].url, \"_blank\") // haberin detay sayfasini yeni pencerede acmak icin\r\n        }\r\n\r\n        return (\r\n\r\n            <div style={{ marginTop: \"65px\" }} >\r\n                <div style={{ width: '70%', float: \"left\" }} >\r\n                    <CardGroup >\r\n                        {news}\r\n\r\n                        {/*<NewsCard />*/}\r\n                    </CardGroup>\r\n                </div>\r\n\r\n                <div style={{ width: '30%', float: \"left\", position: 'fixed', top: '65px', right: 0 }} >\r\n                    <div>\r\n\r\n                        <NewsCard\r\n                            click={visitUrlHandler} // haberin linkini almak icin\r\n                            //******** propsla class veya style gonderebiliriz. asagidaki gibi ********/\r\n                            newWidth=\"100%\" // bunu propsla gondermemin sebebi ekranda sagdaki tek cardın width'ini 100% yapmak icin\r\n                            newHeight='570px'\r\n                            newTextHeight='204px'\r\n                            //display='none' // olusacak card'ların display durumlarını propsla gonderiyorum. \r\n                            // bunu sagdaki buyuk divin icindeki buttonu yok etmek icin kullandim\r\n                            urlToImage={this.state.data[i].urlToImage}\r\n                            title={this.state.data[i].title}\r\n                            description={this.state.data[i].description}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","\r\nexport const categoryData = {\r\n\r\n    categoriesData: [\r\n        {\r\n            name: 'Business'\r\n        },\r\n        {\r\n            name: 'Entertainment'\r\n        },\r\n        {\r\n            name: 'General'\r\n        },\r\n        {\r\n            name: 'Health'\r\n        },\r\n        {\r\n            name: 'Science'\r\n        },\r\n        {\r\n            name: 'Sports'\r\n        },\r\n        {\r\n            name: 'Technology'\r\n        }\r\n    ],\r\n\r\n    categoriesCountry: [\r\n        {\r\n            name: 'USA',\r\n            parameter: 'us'\r\n        },\r\n        {\r\n            name: 'GERMANY',\r\n            parameter: 'de'\r\n        },\r\n        {\r\n            name: 'TURKEY',\r\n            parameter: 'tr'\r\n        }\r\n    ]\r\n}\r\n\r\n\r\n// export const categoryData = {\r\n\r\n//     categoriesData: [\r\n//         {\r\n//             name: 'Business',\r\n//             parameter: 'business'\r\n//         },\r\n//         {\r\n//             name: 'Entertainment',\r\n//             parameter: 'entertainment'\r\n//         },\r\n//         {\r\n//             name: 'General',\r\n//             parameter: 'general'\r\n//         },\r\n//         {\r\n//             name: 'Health',\r\n//             parameter: 'health'\r\n//         },\r\n//         {\r\n//             name: 'Science',\r\n//             parameter: 'science'\r\n//         },\r\n//         {\r\n//             name: 'Sports',\r\n//             parameter: 'sports'\r\n//         },\r\n//         {\r\n//             name: 'Technology',\r\n//             parameter: 'technology'\r\n//         }\r\n//     ]\r\n// }","import React, { useState } from 'react';\r\nimport { Navbar, Nav, Form, FormControl, Button, NavDropdown } from 'react-bootstrap'\r\n// import { TiNews } from \"react-icons/ti\";\r\nimport { GiNewspaper } from \"react-icons/gi\";\r\nimport { categoryData } from '../../data';\r\n\r\n\r\nfunction NavBar(props) {\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // submit\r\n        props.click2(\r\n            text\r\n        )\r\n        //console.log(text)\r\n        setText('')\r\n    }\r\n\r\n\r\n    return (\r\n        // fixed=\"top\" ; navbarın yukarıda sabit kalmasını saglıyor\r\n        // expand=\"lg\"\r\n        <div style={{ fontFamily: 'Special Elite, cursive' }}>\r\n            <Navbar fixed=\"top\" expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"/\">YVZ NEWS <GiNewspaper className='iconn' /></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/\">Home</Nav.Link>\r\n                        <NavDropdown title=\"Categories\" id=\"basic-nav-dropdown\">\r\n                            {\r\n                                categoryData.categoriesData.map((item, i) =>\r\n                                    <NavDropdown.Item key={i} onClick={() => props.click(`${item.name.toLowerCase()}`)}>{item.name}</NavDropdown.Item>\r\n                                    //<NavDropdown.Item key={i} onClick={() => setCategory(`${item.name.toLowerCase()}`)}>{item.name}</NavDropdown.Item>\r\n                                )\r\n                            }\r\n                        </NavDropdown>\r\n                        <NavDropdown title=\"Country\" id=\"basic-nav-dropdown\">\r\n                            {\r\n                                categoryData.categoriesCountry.map((item, i) =>\r\n                                    <NavDropdown.Item key={i} onClick={() => props.click('', `${item.parameter}`)}>{item.name}</NavDropdown.Item>\r\n                                    //<NavDropdown.Item key={i} onClick={() => setCountry(`${item.parameter}`)}>{item.name}</NavDropdown.Item>\r\n                                )\r\n                            }\r\n                        </NavDropdown>\r\n                    </Nav>\r\n\r\n                    <Form inline onSubmit={handleSubmit}>\r\n                        <FormControl type=\"text\" value={text} onChange={e => setText(e.target.value)} placeholder=\"Search\" className=\"mr-sm-2\" autoComplete='off' />\r\n                        <Button type=\"submit\" variant=\"outline-success\">Search</Button>\r\n                    </Form>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, { useState } from 'react';\nimport './App.css';\nimport HomePage from './components/HomePage/HomePage';\nimport NavBar from './components/NavBar/NavBar';\n\n// Problem-1 --> haber linkine gidip geri gelince, site tekrar default degerlere gidiyor\n\nfunction App() {\n\n  const [stateSearch, setStateSearch] = useState('') \n\n  const [categoryAndCountry, setCategoryAndCountry] = useState({category: '', country: ''}) \n\n\n  const categoriesHandler = (category, country) => {\n\n    if (category !== '') {\n      setCategoryAndCountry(\n        {category: category, country: categoryAndCountry.country}\n      )\n\n    } else if (country !== '') {\n      setCategoryAndCountry(\n        {category: categoryAndCountry.category, country: country}\n      )\n    }\n    \n    //console.log(category, country)\n  }\n\n  const searchHandler = (text) => {\n    console.log(text)\n    setStateSearch(text)\n  }\n\n  //console.log(stateSearch)\n\n  return (\n    <div>\n\n      <NavBar click= {categoriesHandler} click2={searchHandler}/>\n\n      <HomePage {...categoryAndCountry} search={stateSearch}/>\n          \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}